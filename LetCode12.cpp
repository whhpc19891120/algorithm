#include <string>
#include <limits>
#include <vector>

/*
I             1
V             5
X             10
L             50
C             100
D             500
M             1000

例如， 罗马数字 2 写做?II?，即为两个并列的 1。12 写做?XII?，即为?X?+?II?。 27 写做??XXVII, 即为?XX?+?V?+?II?。

通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做?IIII，而是?IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为?IX。这个特殊的规则只适用于以下六种情况：

I?可以放在?V?(5) 和?X?(10) 的左边，来表示 4 和 9。
X?可以放在?L?(50) 和?C?(100) 的左边，来表示 40 和?90。?
C?可以放在?D?(500) 和?M?(1000) 的左边，来表示?400 和?900。
给定一个整数，将其转为罗马数字。输入确保在 1?到 3999 的范围

*/

using namespace std;

class Solution {
public:
	string intToRoman(int num) 
	{
		string str;
		vector<int> vect;
		int k = 0;
		while (num > 0)
		{
			vect.push_back((num % 10) * pow(10, k++));
			num /= 10;
		}
		std::reverse(vect.begin(), vect.end());
		int count = 0;
		for (size_t i = 0; i < vect.size(); ++i)
		{
			count = 0;
			if (vect[i] >= 1000)
			{
				count = vect[i] / 1000;
				while (count-- > 0)
					str.push_back('M');
			}
			else if (vect[i] == 900)
			{
				str.push_back('C');
				str.push_back('M');
			}
			else if (vect[i] >= 500)
			{
				str.push_back('D');
				int count = (vect[i] - 500) / 100;
				while (count-- > 0)
					str.push_back('C');
			}
			else if (vect[i] == 400)
			{
				str.push_back('C');
				str.push_back('D');
			}
			else if (vect[i] >= 100)
			{
				str.push_back('C');
				int count = (vect[i] - 100) / 100;
				while (count-- > 0)
					str.push_back('C');
			}
			else if (vect[i] == 90)
			{
				str.push_back('X');
				str.push_back('C');
			}
			else if (vect[i] >= 50)
			{
				str.push_back('L');
				count = (vect[i] - 50) / 10;
				while (count-- > 0)
					str.push_back('X');
			}
			else if (vect[i] == 40)
			{
				str.push_back('X');
				str.push_back('L');
			}
			else if (vect[i] >= 10)
			{
				str.push_back('X');
				int count = (vect[i] - 10) / 10;
				while (count-- > 0)
					str.push_back('X');
			}
			else if (vect[i] == 9)
			{
				str.push_back('I');
				str.push_back('X');
			}
			else if (vect[i] >= 5)
			{
				str.push_back('V');
				count = (vect[i] - 5);
				while (count-- > 0)
					str.push_back('I');
			}
			else if (vect[i] == 4)
			{
				str.push_back('I');
				str.push_back('V');
			}
			else if (vect[i] >= 1)
			{
				count = vect[i];
				while (count > 0)
				{
					str.push_back('I');
					count--;
				}
			}
		}
		return str;
	}
};

#if defined(__LETCODE12__)
void main() 
{
	Solution solution;
	string str = solution.intToRoman(1994);
}
#endif